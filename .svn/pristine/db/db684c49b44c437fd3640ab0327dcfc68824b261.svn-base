package kr.co.coduck.service;

import java.io.File;
import java.io.IOException;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.multipart.MultipartFile;

import kr.co.coduck.dao.AdminQnaDao;
import kr.co.coduck.dto.AdminQnaCriteria;
import kr.co.coduck.dto.AdminQnaDto;
import kr.co.coduck.form.userQuestionToAdm;
import kr.co.coduck.vo.AdQna;
import kr.co.coduck.vo.AdQnaFile;

@Service
public class AdminQnaServiceImpl implements AdminQnaService {
	
	// 파일을 저장할 경로 지정하기
    @Value("${user.question.img.directory}")
    private String imageDirectory;
	
	@Autowired
	private AdminQnaDao adminQnaDao;
	
	@Override
	public AdQnaFile getAdQnaFileByQnaNo(int qnaNo) {
		return adminQnaDao.getAdQnaFileByQnaNo(qnaNo);
	}
	
	@Override
	public AdQna getAdQnaByUserNo(int userNo) {
		return adminQnaDao.getAdQnaByNo(userNo);
	}
	
	@Override
	public AdQna getAdQnaByNo(int no) {
		return adminQnaDao.getAdQnaByNo(no);
	}
	
	@Override
	public void insertAdQnaFile(AdQnaFile file) {
		adminQnaDao.insertAdQnaFile(file);
	}
	
	@Override
	public int insertAdQna(userQuestionToAdm form, int userNo) throws IOException {
		AdQna adQna = new AdQna();
        adQna.setUserNo(userNo);
        adQna.setTitle(form.getTitle());
        adQna.setContent(form.getContent());
        adminQnaDao.insertAdQna(adQna);
        
        for(MultipartFile image : form.getFiledatas()) {
            String originalName = image.getOriginalFilename();
            
            System.out.println("===================================================");
            
            System.out.println("originName :"+ originalName);
   
            //image.transferTo(new File(imageDirectory, originalName));
            FileCopyUtils.copy(image.getBytes(), new File(imageDirectory, originalName));
            
            AdQnaFile qnaFile = new AdQnaFile();
            qnaFile.setFileName(originalName);
            qnaFile.setAdQnaNo(adQna.getNo());
            
            adminQnaDao.insertAdQnaFile(qnaFile);
      	  	
        }
        return adQna.getNo();
	}
		
	@Override
	public List<AdminQnaDto> getQnaByCriteria(AdminQnaCriteria adminQnaCriteria) {
		return adminQnaDao.getQnaByCriteria(adminQnaCriteria);
	}

	@Override
	public int getQnaCntByCriteria(AdminQnaCriteria adminQnaCriteria) {
		return adminQnaDao.getQnaCntByCriteria(adminQnaCriteria);
	}
}
