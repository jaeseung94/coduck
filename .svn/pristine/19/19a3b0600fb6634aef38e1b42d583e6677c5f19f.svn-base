package kr.co.coduck.web.controller;

import java.io.File;
import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import kr.co.coduck.dto.AdminQnaCriteria;
import kr.co.coduck.dto.AdminQnaDto;
import kr.co.coduck.form.userQuestionToAdm;
import kr.co.coduck.service.AdminQnaService;
import kr.co.coduck.vo.AdQna;
import kr.co.coduck.vo.AdQnaFile;
import kr.co.coduck.vo.Pagination;
import kr.co.coduck.vo.User;

@Controller
@RequestMapping("/admin")
public class AdminQnaController {

	// 파일을 저장할 경로 지정하기
    @Value("${user.question.img.directory}")
    private String imageDirectory;
	
	@Autowired
	private AdminQnaService adminQnaService;
	
	//1:1문의 등록
    @PostMapping("/questionImageupload.hta")
    public String insertAdQna(userQuestionToAdm form, HttpSession session, Model model) throws IOException {
        User user = (User)session.getAttribute("LU");
        
        int qnaNo = adminQnaService.insertAdQna(form, user.getNo());
        model.addAttribute("qna", adminQnaService.getAdQnaByNo(qnaNo));
        model.addAttribute("imgs", adminQnaService.getAdQnaFileByQnaNo(qnaNo));
        return "userQnaToAdmDetail";
    }

	
	@GetMapping("/qna.hta")
	public String qnaSearch(AdminQnaCriteria criteria, @RequestParam(value = "pageno", required = false, defaultValue = "1") int pageNo, Model model) {
		
		int totalCnt = adminQnaService.getQnaCntByCriteria(criteria);
		Pagination pagination = new Pagination(pageNo, totalCnt, 10, 5);
		
		criteria.setBeginIndex(pagination.getBeginIndex());
		 criteria.setEndIndex(pagination.getEndIndex()); 
	    List<AdminQnaDto> qnaList = adminQnaService.getQnaByCriteria(criteria);
	    
	    model.addAttribute("qnaList", qnaList); 
	    model.addAttribute("pagination", pagination);
	
		return "admin/qna";
	}
	
	
}
