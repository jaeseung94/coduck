<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Connection Pool 스프링 빈으로 등록 -->
	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close"> 
		<property name="driverClassName" value="oracle.jdbc.OracleDriver"></property>
		<!-- <property name="url" value="jdbc:oracle:thin:@192.168.10.30:1521:xe"></property> -->
		<property name="url" value="jdbc:oracle:thin:@192.168.10.30:1521:xe"></property>
		<property name="username" value="coduck"></property>
		<property name="password" value="zxcv1234"></property>
	</bean>
	
	<!--  
		트랜잭션 매니저 스프링 빈으로 등록
	-->
	<bean id="transactionManager" 
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>	
	</bean>
	
	<!--  
		어노테이션을 기준으로 트랜잭션 실행. transactionManager아이디로 설정된 걸로.
		트랜잭션 처리가 필요한 곳에 @Transactional 어노테이션을 부착하면
		스프링이 트랜잭션 처리를 자동으로 수행한다.
	-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- 
		mybatis 핵심객체 스프링 빈으로 등록
	 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:/META-INF/mybatis/mybatis-config.xml"></property>
		<property name="mapperLocations" value="classpath:/META-INF/mybatis/mappers/*.xml"></property>
	</bean>
	
	<!--
		Dao인터페이스를 스캔해서 Dao 구현객체를 생성하고, 스프링의 빈으로 등록시키는 
		MapperScannerConfigurer 객체 스프링 빈으로 등록 
	  -->
	  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	  	<property name="basePackage" value="kr.co.coduck.dao"></property>
	  	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	  </bean>
	  
	  <!--
	  	의존성 주입관련 어노테이션을 감지하고, 적절한 처리를 수행하는
	  	스프링의 xxAnnoationtionProcessor 객체 스프링 빈으로 등록
	    -->
	  <context:annotation-config/>
	  
	  <!-- 
	  	지정된 패키지에서 스프링의 빈으로 등록.
	  	xxx.ServiceImple들이 빈으로 등록된다.
	   -->
	   <context:component-scan base-package="kr.co.coduck.service"/>
	   
</beans>
